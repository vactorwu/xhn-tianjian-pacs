;*******************************************************************************
;
;ABCPYDOC.INI - This file is an example file that shows how to use the
;               "blind-copy" capability with Adobe Acrobat installations.
;
;	This file also contains documentation on how to silently install Acrobat.
;
;NOTE:  Do NOT use this file for blind-copy.  It is meant only as an example.
;*******************************************************************************
;
;Blind-copy capability provides a mechanism where an Adobe OEM or VAR may modify
;the appearance of the Acrobat installation, and add their own files, registry 
;entries or INI settings during the Acrobat installation.
;
;To trigger the blind-copy mechanism, a file named ABCPY.INI (Adobe Blind CoPY 
;initialization file) must exist in the same directory as the installer (SETUP.EXE) 
;for Acrobat, whether for the individual Acrobat products or the Acrobat 3.01 
;"umbrella" multi-product installer. 
;
;ABCPY.INI is formatted similar to any Windows-based .INI file, with sections and 
;key-value pairs within the sections.  The section names are either pre-determined
;or in some cases must match values set in ACROINST.INI (a hidden file used by
;Acrobat installations).
;
;The pre-determined section names are [OEM Install] and [Launches].
;
;
;********************************************************************************
;*********************	OEM Install Section of ABCPY.INI	*********************
;********************************************************************************
;
;The section [OEM Install] can be used to determine some of the behavior of the
;Acrobat installation, affecting which dialogs are displayed, the default
;destination directory, and the default "program group" (i.e. where Acrobat icons 
;or shortcuts are created).
;
;NOTE:	If your goal is to install Acrobat "silently", use the SETUP.EXE command 
;		line options discussed at the bottom of this file.  Changing all of the
;		Display{....} keys to "NO" in [OEM Install] will NOT result in a silent
;		installation!
;
;The key names defined in [OEM Install] are pre-defined, so they cannot be altered.
;Key names starting with Display{....} are set by using the words YES or NO.  The
;other keys need values that are valid strings for the object being set.
;
;The following is an example of the list of the recognized keys and their values 
;within the [OEM Install] section of the ABCPY.INI file.  The order in which these 
;keys appear in this list coincides with the order that the dialogs are displayed 
;during the normal Acrobat "umbrella" installation.  The values shown here are the 
;default values in the normal Acrobat "umbrella" installation.  The absence of any 
;of these keys will result in the Acrobat installation using the defaults within 
;the normal installation, so this example is actually unnecessary and redundant.  
;The addition of keys not defined in this list will be ignored by the Acrobat 
;installation.
;

[OEM Install]
DisplayWelcomeDlg=YES
DisplayProductChoiceDlg=YES
DisplayTypeOfInstallDlg=YES
DisplaySelectDestDirDlg=NO
DisplayConfirmNewDir=NO
DisplaySVAL=YES
DisplayConfirmRegDlg=YES
DisplaySelectProgGrpDlg=NO
DisplayStartCopyDlg=YES
DisplayFinishDlg=YES
DisplayRebootDlg=YES
DisplayBusyMessages=YES
ProgGroupName=Adobe Acrobat
DefaultDestDir=\Acrobat3
;
;DisplayWelcomeDlg controls whether the first dialog appears.  This dialog contains 
;messages instructing the user to shut down other applications when installing, and
;a legal reminder that the software is copyrighted, etc.
;
;DisplayProductChoiceDlg controls whether the multi-product choice dialog appears.
;
;DisplayTypeOfInstallDlg controls whether the Component Selection dialog appears.
;This dialog allows the user to modify the destination path as well as providing
;disk space requirements for the installation.
;
;NOTE:	The DisplayTypeOfInstallDlg key should be set to NO for Acrobat Reader
;		installations.
;
;DisplaySelectDestDirDlg controls whether the Select Destination Directory dialog
;appears.  This dialog allows the user to modify the destination path.
;
;NOTE:	The DisplaySelectDestDirDlg key should only be set to YES for Acrobat Reader
;		installations.  The other Acrobat installations use the Component Selection
;		dialog for allowing the user to modify the destination path.
;
;DisplayConfirmNewDir controls whether an Adobe-defined message box is displayed when
;the user chooses a destination path that does not exist.  This is normally set to NO.
;
;DisplaySVAL controls whether the user registration dialog is displayed.
;
;NOTE:	This dialog must be displayed if the Adobe product you are installing requires
;		a serial number (i.e. Acrobat Reader does not display this dialog even if the 
;		value here is set to YES, but the installation will be appear to hang if this 
;		dialog is not displayed for	Acrobat Exchange or the multi-product installation).
;		A valid Adobe Acrobat serial number must be entered for the installation to
;		continue and trying to circumvent this dialog by not displaying it is not the
;		method that will work.
;
;DisplayConfirmRegDlg controls whether the dialog requesting confirmation of the user
;registration information appears.
;
;DisplaySelectProgGrpDlg controls whether the Select Program Group dialog appears which
;allows users to choose which Program Group or Start Menu folder icons/shortcuts are
;created in.
;
;DisplayStartCopyDlg controls whether the dialog displaying what choices the user has
;made (just prior to actually copying the files) appears.
;
;DisplayFinishDlg controls the appearance of the dialog allowing the user perform online 
;registration (not available with Acrobat Reader) or view the ReadMe file.
;
;DisplayRebootDlg controls the appearance of a Reboot dialog or a Reboot message if 
;the Acrobat installation detected the need for the user to reboot their machine due
;to an event in the installation (e.g. a file is locked and will be replaced at reboot).
;Setting this value to NO will cause the message to be displayed and setting the value
;to YES will provide the dialog to be displayed.
;
;DisplayBusyMessages controls whether a message is displayed that provides 
;feedback to the user when the Acrobat installer is performing a lengthy task.
;
;ProgGroupName will take any valid Program Group name.
;
;NOTE:	ProgGroupName is not platform smart, so the name will be the same on 
;		both 16-bit and 32-bit Windows platforms.
;
;DefaultDestDir will take any valid directory name (i.e. for 16-bit Windows 
;use 8.3 names).  For the Acrobat multi-product installation, this directory 
;is the top-level directory for the products.
;
;NOTE:	DefaultDestDir is not platform smart, so the directory will be the same
;		on both 16-bit and 32-bit Windows platforms.
;
;
;********************************************************************************
;*********************	Launch Section of ABCPY.INI	*****************************
;********************************************************************************
;
;The [Launches] section of ABCPY.INI provides the capability of launching either
;another InstallShield script or another Windows application from the Acrobat
;installer.  This section (as similar to [OEM Install]) is not dependent on any
;product or component being selected by the user.
;
;The keys that are necessary for this mechanism to work are:
;NumberOfLaunches
;Launch<X>Platform
;Launch<X>Type
;Launch<X>Program
;Launch<X>CmdLine
;Launch<X>ChangeDir
;Launch<X>Wait
;
;where <X> is replaced by a number lees than or equal to the NumberOfLaunches.
;
;The NumberOfLaunches key is defined only once and sets the value for how many
;applications are to be launched via the blind copy mechanism.  This value must
;be one or larger.
;
;NOTE:	The "umbrella" Acrobat installer also has the capability of launching
;		Apple QuickTime for Windows if the user (or the silent installation
;		record session) chose that product and component.
;
;For each launched application, there should be a set of keys similar to those
;shown above with the exception that <X> is replaced with a number.
;
;NOTE:	The value for this number can be not larger than the number of launches
;		as defined in NumberOfLaunches key in this section.
;
;Launch<X>Platform defines which platforms are targeted by this application.
;Valid values for this key include All (all Windows 16 and 32 bit platforms),
;Win32 (any Windows 32 bit operating system), Win16 (any Windows 16 bit 
;operating system), Win95 (Windows 95 only), WinNT (Windows NT only),
;WinNTNew (Windows NT 4.0 or higher), WinNTOld (Windows NT 3.51), or !WinNT
;(any Windows operating system other than Windows NT).
;
;Launch<X>Type defines whether the "application" to be launched is an
;InstallShield script (launched via the DoInstall () function), or an 
;executable (launched via the LaunchAppAndWait () function).  The valid values
;are "INS" for an InstallShield script and "EXE" for an executable.
;
;Launch<X>Program defines the launched application file name.  It must a valid
;file name.  Do not use the full path here, just the file name.
;
;Launch<X>CmdLine defines any command line parameters to be used when launching
;the application.
;
;Launch<X>ChangeDir defines the full path of the directory where the launched
;program resides.  This is used to perform a ChangeDirectory command to insure
;that the program can be launched (in case it depends on any DLLs in the same
;directory).
;
;Launch<X>Wait designates whether the Acrobat installation script should wait
;for the launched program to quit before continuing.
;
;*******************************************************************
;The following is an example for using the [Launch] section.
;

[Launches]
NumberOfLaunches=3
Launch1Platform=All
Launch1Type=INS
Launch1Program=Setup2.ins
Launch1CmdLine=
Launch1ChangeDir=$Source\Disk1
Launch1Wait=YES
Launch2Platform=Win16
Launch2Type=EXE
Launch2Program=QT16.exe
Launch2CmdLine=
Launch2ChangeDir=$Source
Launch2Wait=YES
Launch3Platform=Win32
Launch3Type=EXE
Launch3Program=QT32.exe
Launch3CmdLine=
Launch3ChangeDir=$Source
Launch3Wait=YES

;
;In the example, there are three launches defined, but only two will happen on
;any user's system since launches 2 and 3 are mutually exclusive.
;
;The first launch is an InstallShield installation that resides in a directory 
;named Disk1 located below the Acrobat installation directory (which is named 
;by the variable $Source - $Source is a convenient way of designating the 
;directory where the Acrobat installation resides no matter what it is named
;and no matter what drive it is located on).  It will launch on all Windows 
;platforms and run the Setup2.ins program which is a compiled InstallShield 
;script.  The Acrobat installer will change the working directory to Disk1 below
;the Acrobat installation, and it will wait for this installation to complete
;prior to continuing.
;
;The second and third launches are examples of how to launch executables (these
;happen to be the Apple QuickTime for Windows installers).  The values used for
;these should be easy to decipher from the above explanations.
;
;
;********************************************************************************
;************	Product Specific portion of ABCPY.INI	*************************
;********************************************************************************
;
;To "trigger" file copying, registry entries and/or INI settings, there must be a
;section name in ABCPY.INI that matches values set in ACROINST.INI (a hidden file 
;used by Acrobat installations).
;
;For example, if a customer needs the blind-copy capability for an Acrobat Reader
;installation, a section in ABCPY.INI must be named [ReaderBlindCopy].  If 
;Acrobat Exchange is the product installed, a section named [ExchangeBlindCopy] 
;must exist in ABCPY.INI.  The other valid sections at this time are:
;[DistillerBlindCopy], [CatalogBlindCopy], [CaptureBlindCopy], and 
;[PDFWriterBlindCopy].  These sections are only triggered to work if the user
;has selected the first component of those products.  Otherwise, the product
;specific portions of ABCPY.INI will not be invoked.
;
;There are five types of "object actions" that can be added.  1) A "requirement"
;may be performed, 2) files can be copied, 2) program items or shortcuts 
;(depending on the target operating system) can be created, 3) registry entries 
;can be created, and 4) INI entries can be created.
;
;To have an action performed on these blind-copy objects, there are several 
;entries that must be made within the product's blind-copy section.  First,
;there must be a key named "NumberOfGroups" and this key must have a value
;of 1 or more.  
;
;For each "group", there will need to be entries for operating system platform, 
;target destination location, source location, and an optional entry for a 
;"group" name which is used for the program group name used when icons or 
;Start Menu shortcuts are created.  
;
;By reviewing the example section in this file, the entries for each group are:
;Group<X>Platform=All
;Group<X>DestDir=Org
;Group<X>Loc=Org
;Group<X>Name=
;
;where <X> is replaced with the number of a specific group.
;NOTE: The value for the group can be not larger than the number of groups as 
;		defined in NumberOfGroups key in this section.
;
;The platform key must contain a value contained in the following set: 
;(All, Win32, Win16, Win95, WinNT, WinNTNew, WinNTOld, !WinNT).  
;All means this group is targeted to all Windows operating system. 
;Win32 means the target platform is Windows 95 or Windows NT.
;Win16 means the target platform is only 16 bit Windows (3.1x). 
;Win95 means only Windows 95.  
;WinNT means only Windows NT
;WinNTNew means Windows NT 4.0 or higher
;WinNTOld means Windows NT 3.51
;!WinNT means the target platform is All except Windows NT.
;
;Group<X>DestDir contains the target destination directory name.  There are two
;variables that can be used here to designate the Windows and WindowsSystem
;directories (no matter what they are named on the user's system).  These
;variables are $Windows and $WindowsSystem.
;
;Group<X>Loc is the source location relative to the main installation directory
;(i.e. on the source media of the installation set, NOT where the user chose to
;install Acrobat).
;
;All remaining keys are used for performing certain actions.

;Each group can then have entries for the five "object actions" and those actions
;use the group settings for determining the source, destination, etc.  Below is
;a description of how to set these up correctly.
;
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;REQUIREMENTS
;
;To have a "requirement" performed, there must be one line in the group as follows:
;
;Group<X>NumberOfRequirements=<Y>, where <X> is the group number and <Y> is the 
;number of requirement actions to be performed for this group.  At this time, the
;only supported requirement is running the Windows application REGEDIT.EXE which
;can be used to add registry entries using a pre-defined registry file.
;
;The following shows an example requirement using REGEDIT:
;
;Group2NumberOfRequirements=1
;Group2Requirement1=REGEDIT
;Group2RegEditFile=Extra\Extra32.REG
;
;The key Group<X>RegEditFile=<.REG file> must exist on the users system in a
;sub-directory of the path where Acrobat was installed.  This .REG file will
;then be run via REGEDIT.EXE.
;
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;FILE COPYING
;
;To have a file "blind copied" during installation, there must be a key named
;Group<X>NumberOfFiles, and the value of this key must be the number of files to 
;be copied from this source location to the group's target destination as defined 
;in the Group<X>DestDir and Group<X>Loc keys.
;
;For each file to be copied, a key of the following format must be defined:
;Group<X>FileName<Y>, where <X> is the group number and <Y> is the file number.
;NOTE: The file number cannot be greater than the number of files value.
;
;NOTE: There is no mechanism to rename files as they are copied.
;
;NOTE: Files will be directly copied.  The blind-copy mechanism would not know
;      which decompression scheme to use.
;
;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
;PROGRAM ICONS AND SHORTCUTS
;
;To create a program item or shortcut, a key must be defined containing the number
;of "icons" to be created.
;
;If the number is one or more, a key in the following format must be defined:
;Group<X>Icon<Y> (see notes above regarding numbering).
;
;The value for these keys is rather cryptic, so please bear with this discussion.
;This type of object action requires a comma-delimited (i.e. separated by commas)
;value that has a variable number of parameters depending on the value of the first 
;parameter.
;
;NOTE:	The comma-delimited list CANNOT have spaces following the commas or the
;		parameters will not be read correctly.
;
;The first parameter of the value must be either STYLE1 or STYLE2.  
;STYLE1 is used when the object referred to is an executable or an automatically 
;launched file (i.e if the file's extension automatically launches the correct 
;executable).
;STYLE2 is used when the object referred to requires a primary executable to launch
;the second file (e.g. NOTEPAD.EXE is often used for launching a ReadMe text file).
;
;Once the STYLE<X> is defined, the second portion refers to the working directory 
;for the file named in the third portion.  There are a limited number of values allowed
;for this second parameter.  If the first character is a '$' then the following values
;are accepted: $Windows, $WindowsSystem, or $ProductPath.  Respectively, these refer 
;to the directory where Windows is installed, the Windows System directory, or the
;directory location of the Acrobat product whose BlindCopy section this entry is in.
;
;As stated above, the third parameter is the name of the executable file (or automatically
;launched file is that is appropriate).  There is one variable allowed for an executable
;file and that is $Product which refers to the Acrobat product that was installed based
;on the section of ABCPY.INI that is being processed (i.e. if the current section is
;[ReaderBlindCopy], $Product refers to the Acrobat Reader executable).  This allows you
;to have only one entry for the Acrobat product even though the Acrobat product executable
;may be named differently on 16 bit and 32 bit Windows platforms.
;
;The fourth parameter is the literal text that will be displayed in the Windows UI that
;describes the main file (for STYLE1 this is the file referred to in the 3rd parameter,
;for STYLE2 it is the file referred to in the 7th parameter).
;
;For the fifth parameter (and last for STYLE1 entries), this is a number for the index to
;the icon for Windows to use from the 3rd parameter.  This is typically 0 (zero).
;
;STYLE2 entries require two more parameters.  
;
;The sixth parameter is the location or working directory of the file referenced 
;in the seventh and last parameter.  The sixth parameter can be any of the same 
;variables that are accepted for the second parameter ($Windows, $WindowsSystem, 
;$ProductPath).  There are two other variables that are defined in a unique way 
;for the sixth parameter.  The variables are $Source and $OrgSrc and they can be 
;suffixed with a backslash '\' and any literal text that defines a valid directory
;path on the original CD or network location where the Acrobat installation was 
;launched from.  In other words, $Source and $OrgSrc usually will refer to the 
;same location which is the drive and directory where the Acrobat installation 
;was launched from.  These variables can then be used (along with an optional 
;appended suffix) to point to files that are to be left on the installation 
;source media and not copied during the installation. 
;
;The seventh parameter (used only with a STYLE2 entry) is a valid file name.
;
;The following explanation of the example entries should clarify most questions.
;
;Group1Icon1=STYLE1,Org,Match.exe,Match,0
;In this example, the above entry will create a program item or shortcut in the same 
;folder as was used by the Acrobat installation (because Group1Name is blank).  The item
;will display "Match" (the 4th parameter) as the description, and the command line created 
;will be for the program named Match.exe that is located in the Org directory below where 
;the user chose to put their Acrobat program files.  The first icon indexed within Match.exe 
;will be used in displaying the item.
;
;Group1Icon2=STYLE2,$Windows,Notepad.exe,Match ReadMe,0,Org,Readme.txt
;Here the entry will create a program item or shortcut in the same folder as was used by
;the Acrobat installation (because Group1Name is blank), for the file named Readme.txt
;that is located in the Org directory below where the user chose to put their Acrobat
;program files.  The description the user will see is "Match ReadMe" and the icon displayed
;will be the default icon for Notepad.exe.  The command line used to launch this item will
;be "<Windows drive and directory>\Notepad.exe <Drive and directory for Acrobat>\Org\Readme.txt"
;
;NOTE: Be careful when using Write.exe, because this file is located in	either the Windows
;		directory or the Windows System directory (on NT 4.0), thus making an entry that uses
;		Write.exe platform dependent.
;
;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
;REGISTRY ENTRIES
;
;To create registry entries within a group, the first required line is:
;Group<X>NumberOfRegEntries=<Y>, where <X> is the number of the group and <Y> is the
;                                number of registry entries to add.
;
;For each registry entry, there must be a key with a comma-delimited value containing six parts.
;
;The first parameter is the target platform.  The platform defined at the group level may be broader
;than the registry entry, so there is another means of differentiating settings based on the
;operating system of the end-user.  The same values for platform are used for both the group and
;the registry entries (and, as you will see, for INI settings).
;
;The second parameter in the comma-delimited value is the parent class where the registry entry
;will be created.  The most commonly used values here are HKEY_CLASSES_ROOT (the only valid
;parent for 16 bit Windows), HKEY_LOCAL_MACHINE, and HKEY_CURRENT_USER.  These are the only
;values currently valid within the blind-copy mechanism.
;
;The third parameter is the subkey within the registry where the entry will be created.
;
;The fourth parameter is used for the "named value" portion of the registry key.  For 32 bit
;Windows platforms, registry keys may have multiple named values under one key.  For the 16 bit 
;registry, there is no named value capability, thus all registry entries within a key are set 
;to a default named value (as exemplified below in Group1RegEntry2 where the 4th parameter is 
;"Default").
;
;The fifth parameter is used for setting the type of data to be stored in this registry key (or in
;the named value of that key).  The currently supported settings are STRING, MULTIPLE_STRING,
;EXPANDABLE_STRING, and NUMBER.  MULTIPLE_STRING is used when the string data has new lines embedded.
;EXPANDABLE_STRING is used when the string data contains an expandable environment variable such as
;"%PATH%".
;
;The sixth parameter is the value for the key or named value.  This parameter may contain a 
;literal value or be in the following set of variables - $Product, $ProductPath, $Source, 
;$Windows, or $WindowsSystem.  $Product will be replaced with the full path and executable 
;file name of the Acrobat product that is associated with this section in ABCPY.INI.  
$ProductPath will be replaced with the directory for this Acrobat product.  $Source can used 
;by itself or it can also be the prefix for a valid directory existing on the installation 
;source media (e.g. $Source\ExtraTXT which would refer to the directory ExtraTXT below the 
;main installation source directory).  $Windows will be replaced by the directory where
;the user's operating system is located, and $WindowsSystem will be replaced by the Windows
;System directory (for NT systems this directory is named SYSTEM32).
;
;Below are two examples of similar entries, one for the 32 bit registry and one for 16 bit registry.
;
;Group1RegEntry1=Win32,HKEY_LOCAL_MACHINE,Software\Adobe\Acrobat,BlindCopy,STRING,Match Utility
;Group1RegEntry2=Win16,HKEY_CLASSES_ROOT,Software\Adobe\Acrobat\BlindCopy,Default,STRING,Match Utility
;
;
;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
;INI SETTINGS
;
;To create INI settings within a group, the first required line is:
;Group<X>NumberOfIniSettings=<Y>, where <X> is the number of the group and <Y> is the
;                                number of INI settings to add.
;
;For each INI setting, there must be a key with a comma-delimited value containing six parts.
;
;The first parameter is the target platform.  The platform defined at the group level may be broader
;than the INI setting, so there is another means of differentiating settings based on the
;operating system of the end-user.  The same values for platform are used for both the group and
;the INI settings.
;
;The second parameter in the comma-delimited value is the directory location of the INI file.  Again,
;$Windows, $WindowsSystem, and $ProductPath are valid settings as well as literal directories that are 
;relative to where the Acrobat files were decompressed during installation.
;
;The third parameter is the INI file name.  If the file does not exist, it will be created.
;
;The fourth parameter is the section in the INI file where the setting will be made.  The section
;be created if it does not exist.
;
;The fifth parameter is the INI key within the section.
;
;The sixth parameter is the value for the key in the section.  This parameter may contain a 
;literal value or be in the following set of variables - $Product, $ProductPath, $Source, 
;$Windows, or $WindowsSystem.  $Product will be replaced with the full path and executable 
;file name of the Acrobat product that is associated with this section in ABCPY.INI.  
$ProductPath will be replaced with the directory for this Acrobat product.  $Source can used 
;by itself or it can also be the prefix for a valid directory existing on the installation 
;source media (e.g. $Source\ExtraTXT which would refer to the directory ExtraTXT below the 
;main installation source directory).  $Windows will be replaced by the directory where
;the user's operating system is located, and $WindowsSystem will be replaced by the Windows
;System directory (for NT systems this directory is named SYSTEM32).
;
;The following is a simple example that will create an entry in <Windows>\ArcoExch.ini under the
;section [BlindCopy] the following key:
;Match=Match.exe
;
;Group1IniSetting1=Win16,$Windows,AcroExch.ini,BlindCopy,Match,Match.exe
;
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
;
;At this time, this is the current functionality of the blind-copy mechanism that can be used
;with Adobe Acrobat installations.
;
;The following entries can be used as examples for the correct syntax for performing the various
;blind-copy actions.  These examples should not be used literally, unless by some miracle, your
;installation has these exact same files and settings.
;
;>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

[ReaderBlindCopy]
NumberOfGroups=5

Group1Platform=All
Group1DestDir=Org
Group1Loc=Org
Group1Name=
Group1NumberOfFiles=3
Group1FileName1=Match.exe
Group1FileName2=Match.hlp
Group1FileName3=ReadMe.txt
Group1NumberOfIcons=2
Group1Icon1=STYLE1,Org,Match.exe,Match,0
Group1Icon2=STYLE2,$Windows,Notepad.exe,Match ReadMe,0,Org,Readme.txt
Group1NumberOfRegEntries=2
Group1RegEntry1=Win32,HKEY_LOCAL_MACHINE,Software\Adobe\Acrobat,BlindCopy,STRING,Match Utility
Group1RegEntry2=Win16,HKEY_CLASSES_ROOT,Software\Adobe\Acrobat\BlindCopy,Default,STRING,Match Utility
Group1NumberOfIniSettings=1
Group1IniSetting1=Win16,$Windows,AcroExch.ini,BlindCopy,Match,Match.exe

Group2Platform=Win32
Group2DestDir=
Group2Loc=Extra
Group2Name=
Group2NumberOfRequirements=0
Group2NumberOfFiles=1
Group2FileName1=Extra32.REG
Group2NumberOfIcons=0
Group2NumberOfRegEntries=0
Group2NumberOfIniSettings=0

Group3Platform=Win32
Group3DestDir=
Group3Loc=
Group3Name=
Group3NumberOfRequirements=1
Group3Requirement1=REGEDIT
Group3RegEditFile=Extra\Extra32.REG
Group3NumberOfFiles=0
Group3NumberOfIcons=0
Group3NumberOfRegEntries=0
Group3NumberOfIniSettings=0

Group4Platform=Win16
Group4DestDir=
Group4Loc=Extra
Group4Name=
Group4NumberOfRequirements=0
Group4NumberOfFiles=1
Group4FileName1=Extra16.REG
Group4NumberOfIcons=0
Group4NumberOfRegEntries=0
Group4NumberOfIniSettings=0

Group5Platform=Win16
Group5DestDir=
Group5Loc=
Group5Name=
Group5NumberOfRequirements=1
Group5Requirement1=REGEDIT
Group5RegEditFile=Extra\Extra16.REG
Group5NumberOfFiles=0
Group5NumberOfIcons=0
Group5NumberOfRegEntries=0
Group5NumberOfIniSettings=0


;********************************************************************************
;*************************	Silent Acrobat Installations	*********************
;********************************************************************************
;
;As an OEM or VAR, you may wish to install Acrobat silently (i.e. with absolutely
;no user interface).  This is also handy for system administrators and is now
;possible via some built-in mechanisms supplied by InstallShield with additional 
;support added by Adobe.
;
;Adobe Acrobat installation uses the InstallShield3 installation engine which 
;provides a mechanism for "recording" a response file and "playing back" an 
;this file to produce the same installation.  The record mode is only supported 
;under 32 bit Windows (Windows 95 and Windows NT), so you will need to record an
;installation on a 32 bit system before playing it back on a 16-bit Windows
;operating system.  This can create some problems if there are items that are
;not supported on one platform or another.  In that case, you will need one 
;SETUP.ISS file for each Windows operating system that has different installation
;options.  Because the file SETUP.ISS is a text file and is editable, you should
;be able to modify the installation to your exact conditions without too much
;work.
;
;NOTE:	To provide silent installation for 16 bit Windows installations, Adobe
;		has added some functionality to support the playback mode, but not the
;		record mode.  This should not present a problem since the SETUP.ISS file
;		is a text file in a standard Windows INI file format.
;
;*****************************************************************************
;RECORD A RESPONSE FILE
;
;To record an installation, run the Acrobat installation (SETUP.EXE) on a 32-bit 
;Windows operating system and use the command line option '-r'.  On Windows 95 
;or Windows NT 4.0, use the Start Menu->Run menu item (on Windows NT 3.51 use 
;Program Manager->File->Run) and type or browse to the directory where the 
;Acrobat installation is located and selecting SETUP.EXE.  Now before running 
;this program, add a space and -r similar to the following example.
;
;E:\Acrobat\SETUP.EXE -r
;
;You will be installing Acrobat and recording a response file.  This response
;file is named SETUP.ISS and is created in your Windows directory.  Every 
;selection you make will be recorded.  
;
;IMPORTANT NOTE:	When you "record" the installation, DO NOT use the BACK
;					button in dialogs, because this confuses the installation
;					script, and you will not get the installation you intended.
;
;When you have finished the installation, you will need to copy SETUP.ISS to 
;the same directory containing the Acrobat installation files (i.e. the same 
;location as SETUP.EXE, archive.z, etc.).
;
;Depending on the Acrobat installation you are performing and which dialogs are
;displayed, there are many variations for the contents of SETUP.ISS and which 
;specific keys will be written in SETUP.ISS.  For instance, if ABCPY.INI is 
;used to modify which dialogs are displayed, the contents of SETUP.ISS will
;reflect only those dialogs that were displayed.  The general rule for silent 
;installation is that for every dialog in the installation, there are settings 
;that are listed in the SETUP.ISS file.
;
;The following discussion uses the unaltered full multi-product "umbrella" 
;Acrobat installer as the example.  
;
;The following provides the list of keys that would be written to SETUP.ISS if 
;every product and component and sub-component was chosen.
;
;*****************************************************************************
;*********************	Example SETUP.ISS file *******************************
;*****************************************************************************
[InstallShield Silent]
Version=v3.00.000
File=Response File

[Application]
Name=Acrobat
Version=3.01
Company=Adobe

[DlgOrder]
Dlg0=SdWelcome-0
Count=10
Dlg1=SdLicense-0
Dlg2=SdAskOptions-0
Dlg3=SdComponentDialog-0
Dlg4=SdAskOptionsList-0
Dlg5=SdRegisterUserEx-0
Dlg6=SdConfirmRegistration-0
Dlg7=SdStartCopy-0
Dlg8=SdFinish-0
Dlg9=SprintfBox-0

[SdWelcome-0]
Result=1

[SdLicense-0]
Result=1

[SdAskOptions-0]
Component-type=string
Component-count=6
Component-0=Acrobat Exchange 3.01
Component-1=Acrobat Capture and Scan Plug-ins
Component-2=Acrobat Distiller 3.01
Component-3=Acrobat PDFWriter 3.01
Component-4=Acrobat Catalog 3.01
Component-5=Apple QuickTime 2.1 for Windows
Result=1

[SdComponentDialog-0]
szDir=E:\Adobe\Acrobat3
Component-type=string
Component-count=12
Component-0=Acrobat Exchange Files
Component-1=Netscape Plug-in File
Component-2=Acrobat Exchange Plug-ins
Component-3=Acrobat Exchange ActiveX  Files
Component-4=Acrobat Online Documentation
Component-5=Acrobat Capture Plug-in
Component-6=Acrobat Scan Plug-in
Component-7=Acrobat Distiller Files
Component-8=Distiller Assistant 3.01
Component-9=Acrobat PDFWriter Files
Component-10=Acrobat Catalog Files
Component-11=Apple QuickTime 2.1 for Windows
Result=1

[SdAskOptionsList-0]
Component-type=string
Component-count=46
Component-0=Agfa StudioScan Series w/ASPI
Component-1=Agfa StudioScan Series w/PCZ SCSI
Component-2=Apple OneScanner
Component-3=Canon IX-3010 w/ASPI
Component-4=Canon IX-3010 w/SI4
Component-5=Canon IX-4015 w/ASPI
Component-6=Canon IX-4015 w/SI4
Component-7=Canon IX-4025 w/ASPI
Component-8=Canon IX-4025 w/SI4
Component-9=Envision 6600S w/ASPI
Component-10=Envision 6600S w/UMAX UDS-11
Component-11=Envision 8800S w/ASPI
Component-12=Envision 8800S w/UMAX UDS-11
Component-13=Envision Dynamic Pro 3.0 w/ASPI
Component-14=Envision Dynamic Pro 3.0 w/UMAX UDS-11
Component-15=Epson ES-600C
Component-16=Epson ES-800C
Component-17=Epson ES-1000C
Component-18=Epson ES-1200C
Component-19=Epson GT-4000
Component-20=Epson GT-6000
Component-21=Epson GT-6500
Component-22=Epson GT-8000
Component-23=Epson GT-8500
Component-24=Epson GT-9000
Component-25=Fujitsu ScanPartner Jr.
Component-26=Fujitsu ScanPartner 10
Component-27=Fujitsu ScanPartner 10C
Component-28=HP Accupage 2.0
Component-29=HP ScanJet/ScanJet Plus
Component-30=HP ScanJet II Series
Component-31=HP ScanJet III Series
Component-32=Microtek ScanMaker IIHR w/ASPI
Component-33=Microtek ScanMaker IIHR w/Microtek PCZ SCSI
Component-34=Microtek ScanMaker III w/ASPI
Component-35=Microtek ScanMaker III w/Microtek PCZ SCSI
Component-36=Ricoh IS-50
Component-37=Ricoh IS-60
Component-38=UMAX Powerlook w/ASPI
Component-39=UMAX Powerlook w/UMAX UDS-11
Component-40=UMAX Vista S-6 w/ASPI
Component-41=UMAX Vista S-6 w/UMAX UDS-11
Component-42=UMAX Vista S-8 w/ASPI
Component-43=UMAX Vista S-8 w/UMAX UDS-11
Component-44=UMAX Vista T-6 w/ASPI
Component-45=UMAX Vista T-6 w/UMAX UDS-11
Result=1

[SdRegisterUserEx-0]
szName=Acrobat User
szCompany=Your Company
szSerial=XXXXXXXXXXXXXXXXXX
Result=1

[SdConfirmRegistration-0]
Result=1

[SdStartCopy-0]
Result=1

[SdFinish-0]
Result=1
bOpt1=1
bOpt2=1

[SprintfBox-0]
Result=1
;
;*****************************************************************************
;The first two sections of SETUP.ISS ([InstallShield Silent] and [Application]) 
;are created by InstallShield and the values will alter slightly for other
;Acrobat installations.  That alteration is insignificant, but should be 
;unmodified by OEMs/VARs.
;
;The next section in SETUP.ISS is [DlgOrder], and is used to enumerate the 
;dialogs in the installation.  There is a Count key and then keys named DlgX,
;where X starts at zero and goes to Count-1.  The values for these keys are
;the remaining section names and are associated with the dialogs that were 
;displayed.  The DlgX keys are the listing of the dialogs as they displayed,
;so the first key Dlg0 is associated with the Welcome dialog.  Since there is
;only a button response for this dialog, the [SdWelcome-0] section only has one
;key named Result whose value must equal 1.  The same is basically true for 
;several dialogs that only require a button click response such as the License
;Agreement dialog, the Confirm Registration dialog, the Start Copy dialog, and
;the final message which is listed as [SprintfBox-0].  All the other dialogs
;set other values.
;
;The [SdAskOptions-0] section is associated with the product selection dialog.
;This dialog is only used in the Acrobat "umbrella" installer, so if you are
;using a different installer, do not be surprised if it is not present in your
;SETUP.ISS file.  InstallShield views most items in a list as components, so
;it refers to the list as products as components, and this dialog contains six.
;Of course, when you are setting up your own installation, you may not want 
;all of these products installed (e.g. Apple QuickTime for Windows), and so
;your component count would be less.  Likewise, if the product is to be 
;installed silently, it must appear in this list.  Again, the counting of
;components is zero-based (as were the dialogs), so if the Component-count is
;six, there will be keys Component-0 to Component-5.  If you remove any of
;these products, you will need to modify the count key value appropriately,
;and you may also need to renumber the remaining keys so that the numbers
;are consecutive.
;
;The [SdComponentDialog-0] section is associated with the product components.
;Here, components refer to groups of files associated by some functionality,
;such as Acrobat plug-ins, Help files, etc.  In the example above, every Acrobat
;product component is listed as well as Apple QuickTime for Windows.  This 
;section is much the same as the product selection dialog in that if there are
;product components that are not wanted in the silent installations, then those
;components should be removed.  For instance, on Windows NT systems, the user
;must have Administrative privileges to install Distiller Assistant and PDFWriter
;because both of these components require creating a printer and only users
;with administrative privileges can create printers under Windows NT.  Again,
;eliminating components requires modifying the count key value and possibly
;modifying the key names so that the numbering sequence is consecutive.
;
;The next section, [SdAskOptionsList-0] is used for selection of scanner drivers
;based on the premise that the Acrobat Scan Plug-in component has been selected
;during the installation.  If you decide to manually edit the components selected,
;and you "unselect" the Acrobat Scan Plug-in, you should eliminate this entire
;section since it will not be invoked even if it is left in SETUP.ISS.  If this
;section is kept in the installation, it should be reduced to just those driver
;files that are present in the environment of the users.  Another matter of 
;concern for this section is that the drivers are different for Windows NT and 
;the other Windows operating systems.  Thus if you have created SETUP.ISS using 
;Windows 95, do not attempt to use this same section and its values when 
;installing under Windows NT.  You should record a response file under the 
;different operating systems (Windows 95 and NT, since you cannot record a 
;response file using 16 bit Windows) and rename the second SETUP.ISS to a 
;different name.  You can then invoke this different response file by using 
;the SETUP.EXE command line option -f1 followed by the name of the new response 
;file (e.g. SETUP.EXE -f1C:\Mydir\Myapp.iss - see SETUP.EXE Usage Examples at
;bottom of this document).
;
;The next section, [SdRegisterUserEx-0] is used for installations requiring
;entry of a serial number (i.e. not used with Acrobat Reader installations).
;For those Acrobat products that do require a serial number, the user name and
;serial number must be filled in (using the keys szName and szSerial 
;respectively).  Company name is not required and may be left blank.  If the 
;serial number in SETUP.ISS is not a valid Adobe Acrobat serial number, the
;installation will fail.
;
;The last remaining section that has entries other than Result is the 
;[SdFinish-0] section.  This section is associated with the dialog that allows
;users to perform online registration and view the Acrobat ReadMe file.  Since
;both of these options are interactive, these options are turned off during a
;silent installation.
;
;As previously mentioned, if ABCPY.INI is used to alter which dialogs are
;displayed, you will have a different SETUP.ISS.  This is also true if you are
;installing a different Acrobat product such as Exchange or Reader.
;
;*****************************************************************************
;PLAYBACK A RESPONSE FILE
;
;To play back this file, again run SETUP.EXE from the command line and use the
;option -s similar to the following example.
;
;E:\Acrobat\SETUP.EXE -s
;
;This installation will run silently with no user interface and produce an
;installation similar to the one created during the "record" installation (unless
;the response file was altered after the recorded installation).  In other words, 
;if you are running the Acrobat multi-product umbrella installer and you chose 
;only Exchange and Distiller during the recorded installation, all subsequent 
;installations using the silent installation method would then install only 
;Exchange and Distiller until you replaced the SETUP.ISS file in the Acrobat
;installation folder.
;
;
;*****************************************************************************
;*********	LAUNCHING THE ACROBAT INSTALLER FROM ANOTHER APPLICATION *********
;*****************************************************************************
;
;In order to provide a seamless installation, the Adobe Acrobat installation can
;be launched as its own separate installation depending on what best meets your
;needs.  The Adobe Acrobat installer for Windows platforms uses InstallShield3,
;and so if you are also using InstallShield, using the DoInstall() function with
;the appropriate command line option and WAIT/NOWAIT state, you are able to 
;launch and install Adobe Acrobat silently.
;
;If you do not use InstallShield, you can also launch the Adobe Acrobat installer
;using the WinExec() or CreateProcess() APIs.  If you wish to have your 
;application wait until Adobe Acrobat installation is done, you will need the
;PROCESS_INFORMATION passed back from the CreateProcess() function, or call 
;GetModuleHandle() for SETUP.EXE if you are using WinExec(), so that you can 
;determine when SETUP.EXE has finished.
;
;*****************************************************************************
;*****************************************************************************
;***********	SETUP.EXE Usage Examples for Silent Installation	**********
;*****************************************************************************
;
;	setup -s
;	
;	Launches InstallShield Silent and tries to load SETUP.INS and SETUP.ISS
;	from the directory containing SETUP.EXE.  The log file SETUP.LOG is created
;	in the same directory.
;
;
;
;	setup -s -f1c:\mydir\mydir.iss
;	
;	Launches InstallShield Silent , tries to load SETUP.INS from the same
;	directory, and uses MYDIR.ISS (from the C:\MYDIR directory) as the response
;	file.  This example also creates the log file SETUP.LOG in the same
;	directory as that of the response file (C:\MYDIR).
;
;	Note:  If you specify an alternate compiled script using the -f switch and
;	you place -f1 before -f in the command line, Setup will ignore the -f1
;	switch and will create the response file (the .ISS file) in the Windows
;	directory.
;
;
;
;	setup -s -f1c:\mydir\mydir.iss -fc:\mydir\mydir.ins
;	
;	Will not launch InstallShield Silent because the -f1 switch is used before
;	the -f switch, and -f1 is therefore ignored.  No log file will be
;	generated.  However, the -fC:\MYDIR\MYDIR.INS portion of the command line
;	is executed.
;
;
;
;	setup -s -fc:\mydir\mydir.ins -f1c:\mydir\mydir.iss
;	
;	Launches InstallShield Silent , tries to load MYDIR.INS from the C:\MYDIR
;	directory, uses MYDIR.ISS from the C:\MYDIR directory, and generates log
;	file SETUP.LOG in the C:\MYDIR directory.
;
;
;
;	setup -s -fc:\mydir\mydir.ins -f1c:\mydir\mydir.iss -f2c:\mydir\mydir.log
;	
;	Launches InstallShield Silent , tries to load MYDIR.INS from the C:\MYDIR
;	directory, uses MYDIR.ISS from the C:\MYDIR directory, and generates log
;	file MYDIR.LOG in the C:\MYDIR directory.
;
;*****************************************************************************

